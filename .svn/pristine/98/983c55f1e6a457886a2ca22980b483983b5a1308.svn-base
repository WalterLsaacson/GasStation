package com.gasstation.customAdapter;

import java.util.ArrayList;

import okhttp3.Call;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.app.Fragment;
import android.app.ProgressDialog;
import android.content.Context;
import android.os.Bundle;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ListView;

import com.gasstation.data.RechargeInfo;
import com.gasstation.main.MyApplication;
import com.gasstation.util.Const;
import com.guanyin.gasstation.R;
import com.zhy.http.okhttp.OkHttpUtils;
import com.zhy.http.okhttp.callback.StringCallback;

public class MyFragmentConsume extends Fragment {

	private String Tag = "MyFragmentConsume";
	private MyApplication app;
	private Context context = getActivity();
	private ProgressDialog dialog;

	private ListView yeartView;
	private ListView monthView;

	private ArrayList<String> years;
	private ArrayList<String> months;

	private MyListViewAdapter yearAdapter;
	private MyListViewAdapter monthAdapter;

	private ArrayList<RechargeInfo> res = new ArrayList<RechargeInfo>();

	// 加载日期的数据
	private ListView dayView;
	private MyListViewDayAdapter dayAdapter;

	@Override
	public void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		if (app == null) {
			app = MyApplication.getInstance();
		}
	}

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		View view = inflater.inflate(R.layout.fragment, container, false);

		yeartView = (ListView) view.findViewById(R.id.lv_year);
		monthView = (ListView) view.findViewById(R.id.lv_month);
		dayView = (ListView) view.findViewById(R.id.lv_day);

		// 初始化year的listview
		years = new ArrayList<String>();
		for (int i = 2016; i < 2018; i++) {
			years.add("" + i);
		}
		yearAdapter = new MyListViewAdapter(years, getActivity(), "year");
		yeartView.setAdapter(yearAdapter);

		// TODO 在这里默认将年份的listview和月份的listview加载出来，在点击事件内只是将listview进行刷新

		// 初始化month的listview
		months = new ArrayList<String>();
		for (int i = 1; i < 13; i++) {
			months.add("" + i);
		}
		monthAdapter = new MyListViewAdapter(months, getActivity(), "month");
		monthView.setAdapter(monthAdapter);

		// 点击年份之后加载月份列表
		yeartView.setOnItemClickListener(new OnItemClickListener() {
			@Override
			public void onItemClick(AdapterView<?> parent, View view,
					int positionYear, long id) {
				monthView.setAdapter(monthAdapter);
				// 点击月份之后加载日期的数据
				monthView.setOnItemClickListener(new OnItemClickListener() {
					@Override
					public void onItemClick(AdapterView<?> parent, View view,
							int positionMonth, long id) {
						// 在这里获取每个月的数据

						dialog = ProgressDialog.show(context, null,
								"正在查询请稍候...");

						final JSONObject jsonObj = new JSONObject();

						try {
							jsonObj.put("id",
									app.sp.getString("station_id", "0"));
							jsonObj.put("date", "2016-0" + positionMonth + 1);

						} catch (JSONException e) {
							e.printStackTrace();
						}

						OkHttpUtils
								.post()
								.url(Const.serverurl)
								.addParams("route", Const.apiRouteRechargeInfo)
								.addParams("token",
										app.sp.getString("token", null))
								.addParams("jsonText", jsonObj.toString())
								.build().execute(new StringCallback() {
									@Override
									public void onError(Call request,
											Exception e) {
										Const.log(Tag, e.getMessage());
										dialog.dismiss();
										Const.showToast(context,
												"联网失败:" + e.getMessage());
									}

									@Override
									public void onResponse(String response) {
										Const.log(Tag, response);
										JSONObject jsonObj = null;
										try {
											jsonObj = new JSONObject(response);
										} catch (JSONException e) {
											e.printStackTrace();
										}
										try {
											if (jsonObj.getJSONObject("status")
													.getString("succeed")
													.equals("1")) {
												JSONArray result = jsonObj
														.getJSONArray("data");
												if (result != null
														&& result.length() > 0) {
													res.clear();
													for (int i = 0; i < result
															.length(); i++) {
														RechargeInfo card = new RechargeInfo();
														JSONObject obj = result
																.getJSONObject(i);
														card.id = obj
																.getString("id");
														card.user_id = obj
																.getString("user_id");
														card.recharge_card = obj
																.getString("recharge_card");
														card.recharge_money = obj
																.getString("recharge_money");
														card.recharge_memeber = obj
																.getString("recharge_memeber");
														card.telephone = obj
																.getString("telephone");
														card.add_time = obj
																.getString("add_time");
														res.add(card);
													}
													Log.e(Tag, res.toString());
													Log.e(Tag, "加载数据完毕");
													dialog.dismiss();
												}
											} else {
												Const.showToast(
														context,
														"读取数据失败:"
																+ jsonObj
																		.getJSONObject(
																				"status")
																		.getString(
																				"error_desc"));
												dialog.dismiss();
											}
										} catch (JSONException e) {
											e.printStackTrace();
										}
										;
									}
								});

						// dayAdapter = new MyListViewDayAdapter(getActivity(),
						// res);
						// dayView.setAdapter(dayAdapter);
					}

				});

			}
		});
		return view;

	}
}
