package com.gasstation.user;

import java.util.ArrayList;

import okhttp3.Call;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.app.Activity;
import android.app.ProgressDialog;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences.Editor;
import android.graphics.Paint;
import android.os.Bundle;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.Window;
import android.widget.GridView;
import android.widget.TextView;

import com.gasstation.customAdapter.MyGridViewAdapter;
import com.gasstation.data.ReguelInfo;
import com.gasstation.main.MyApplication;
import com.gasstation.util.Const;
import com.guanyin.gasstation.R;
import com.zhy.http.okhttp.OkHttpUtils;
import com.zhy.http.okhttp.callback.StringCallback;

public class PendingActivity extends Activity implements OnClickListener {

	private MyApplication app;
	private Context Context = this;
	private String TAG = "PendingActivity";
	private TextView tv_balance;
	private TextView tv_info;
	private TextView tv_date;

	private boolean isFirstGet = true;
	// 设置gridview
	private ArrayList<ReguelInfo> res = new ArrayList<ReguelInfo>();
	private GridView gridView;
	private MyGridViewAdapter adapter;
	private ProgressDialog dialog;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		setContentView(R.layout.activity_pending);
		if (app == null) {
			app = new MyApplication();
		}

		initView();

		// 设置账户余额的显示信息
		// tv_balance.setText(" 	|	 账户余额：" + app.sBanance + "	 | 	");

		// 设置获取账户信息的函数
		tv_info.getPaint().setFlags(Paint.UNDERLINE_TEXT_FLAG);
		tv_info.setOnClickListener(this);
		// 设置时间
		tv_date.setText("日期：" + Const.Date());

		// 联网获取信息
		getRefuelInfo();
		gridView = (GridView) findViewById(R.id.pending_gridview);
		adapter = new MyGridViewAdapter(this, res);
		gridView.setAdapter(adapter);
	}

	private void getRefuelInfo() {
		// if (!isRunning) {
		// return;
		// }
		dialog = ProgressDialog.show(this, null, "正在读取数据，请稍候...");

		final JSONObject jsonObj = new JSONObject();
		try {
			jsonObj.put("id", app.sp.getString("station_id", "0"));
		} catch (org.json.JSONException e) {
		}
		OkHttpUtils
				.post()
				.url(Const.serverurl)
				// TODO 这里的api还不明确
				.addParams("route", Const.apiRouteJournal)
				.addParams("token", app.sp.getString("token", ""))
				.addParams("jsonText", jsonObj.toString()).build()
				.execute(new StringCallback() {
					@Override
					public void onError(Call request, Exception e) {
						Const.log(TAG, e.getMessage());
						dialog.dismiss();
						Const.showToast(Context, "联网失败:" + e.getMessage());
					}

					@Override
					public void onResponse(String response) {
						Const.log(
								TAG,
								Const.apiRouteJournal + "\n"
										+ app.sp.getString("token", "") + "\n"
										+ jsonObj.toString() + "\n" + response);
						JSONObject jsonObj = null;
						try {
							jsonObj = new JSONObject(response);
						} catch (JSONException e) {
							e.printStackTrace();
						}
						try {
							if (jsonObj.getJSONObject("status")
									.getString("succeed").equals("1")) {
								String totalSum = jsonObj.getJSONObject("data")
										.getString("toltal_sum");
								if (!isFirstGet
										&& totalSum.equals(app.sp.getString(
												"toltal_sum", ""))) {
									// dialog.dismiss();
									return;
								}
								Const.log(TAG, "获取到新数据");
								isFirstGet = false;
								Editor editor = app.sp.edit();
								editor.putString("toltal_sum", totalSum);
								editor.apply();
								tv_balance.setText("账户余额：" + totalSum);
								JSONArray result = jsonObj
										.getJSONObject("data").getJSONArray(
												"result");
								if (result != null && result.length() > 0) {
									res.clear();
									for (int i = 0; i < result.length(); i++) {
										ReguelInfo card = new ReguelInfo();
										JSONObject obj = result
												.getJSONObject(i);

										card.setJournalId(obj
												.getString("journal_id"));
										card.setMemberId(obj
												.getString("member_id"));

										card.setInvoiceCode(obj
												.getString("invoice_code"));
										card.setInvoiceName(obj
												.getString("invoice_name"));

										card.setStationId(obj
												.getString("station_id"));

										card.setCarNumber(obj
												.getString("car_number"));

										card.setGunNumber(obj
												.getString("gun_number"));
										card.setGasType(obj
												.getString("gas_type"));
										card.setPrice(obj.getString("price"));

										card.setTotalPrice(obj
												.getString("total_price"));

										card.setOilMass(obj
												.getString("oil_mass"));

										card.setNoticeState(obj
												.getString("state"));
										card.setPrintState(obj
												.getString("invoice_print"));
										card.setInsertTime(obj
												.getString("insert_time"));
										res.add(card);
									}
									adapter.notifyDataSetChanged();
									Const.log(TAG, "加载数据完毕");
								}
							} else {
								Const.showToast(Context, "读取数据失败:"
										+ jsonObj.getJSONObject("status")
												.getString("error_desc"));
								if (jsonObj.getJSONObject("status")
										.getString("error_code").equals("2002")) {
									// Const.relogin(MainActivity.this);
								}
							}
						} catch (Exception e1) {
							e1.printStackTrace();
						}
						// dialog.dismiss();
					}

				});

	}

	private void initView() {
		tv_balance = (TextView) findViewById(R.id.balance);
		tv_info = (TextView) findViewById(R.id.info);
		tv_date = (TextView) findViewById(R.id.date);
	}

	@Override
	public void onClick(View v) {
		switch (v.getId()) {
		case R.id.info:
			Const.showToast(Context, app.token);
			Intent intent = new Intent(this, ConsumeInfoActivity.class);
			startActivity(intent);
			break;
		default:
			break;
		}
	}
}
